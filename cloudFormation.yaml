AWSTemplateFormatVersion: "2010-09-09"
Description: Terra Cloud
Parameters:
    BucketNameArgument:
        Type: String
    LambdaS3BucketName:
        Type: String
Resources:
    UserTable:
        Type: AWS::DynamoDB::Table
        Properties:
            TableName: UserTable
            AttributeDefinitions:
                -
                    AttributeName: UserName
                    AttributeType: S
                -
                    AttributeName: Password
                    AttributeType: S
            KeySchema:
                -
                    AttributeName: UserName
                    KeyType: HASH
    TerraS3:
        Type: AWS::S3::Bucket
        Properties:
            BucketName: !Ref BucketNameArgument
            AccessControl: PublicRead
    TerraS3LambdaBucket:
        Type: AWS::S3::Bucket
        Properties:
            BucketName: !Ref LambdaS3BucketName
            AccessControl: PublicRead
    CloudFrontOriginAccessIdentity:
        Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
        Properties:
             CloudFrontOriginAccessIdentityConfig:
                 Comment: Cloud Front Origin Access
    CloudFront:
        Type: AWS::CloudFront::Distribution
        Properties:
            DistributionConfig:
                Enabled: 'true'
                DefaultCacheBehavior:
                    TargetOriginId: S3Origin
                    ViewerProtocolPolicy: allow-all
                    ForwardedValues:
                        QueryString: 'false'
                Origins:
                - DomainName: !GetAtt [TerraS3, DomainName]
                  Id: S3Origin
                  S3OriginConfig:
                      OriginAccessIdentity: !Sub
                        - origin-access-identity/cloudfront/${IDOfOriginAccessIdentity}
                        - { IDOfOriginAccessIdentity: !Ref CloudFrontOriginAccessIdentity }
