version: 2.1
orbs:
  aws-cli: circleci/aws-cli@0.1.9
jobs:
  deploy_aws_cloud_formation:
      working_directory: /app
      docker:
          - image: docker:17.05.0-ce-git
      steps:
          - checkout
          - run:
              name: Install Dependencies
              command: |
                apk add --no-cache \
                    py-pip=9.0.0-r1
                pip install \
                    docker-compose==1.12.0 \
                    awscli==1.16.113
          - run:
              name: Configure AWS CLI To Run As Admin Role
              command: |
                aws configure set aws_access_key_id $adminAccessKey
                aws configure set aws_secret_access_key $adminSecretAccessKey
                aws configure set default.region us-east-1
          - run:
              name: Deploy Cloudformation Stack
              command: aws cloudformation deploy --template-file cloudFormation.yaml --stack-name TerraStack --no-fail-on-empty-changeset --parameter-overrides BucketNameArgument=${BucketName} LambdaS3BucketName=${LambdaS3BucketName}
              no_output_timeout: 30m

  deploy_react_to_cloud_front:
      working_directory: ~/app
      docker:
          - image: circleci/node:8.11.0
      steps:
          - checkout
          - run:
              name: Clone React Repo
              command: |
                git clone https://github.com/sdrafahl/TerraWeb.git
          - run:
              name: update-npm
              command: 'sudo npm install -g npm@latest'
          - run:
              name: Install Dependencies
              command: |
                cd TerraWeb
                npm install --only=dev
                npm install
          - run:
              name: Added domainRequests.json
              command: |
                touch ./TerraWeb/src/domainRequests.json
                echo "{}" >> ./TerraWeb/src/domainRequests.json
          - run:
              name: Unit Tests For React
              command: |
                cd TerraWeb && npm run test
          - run:
              name: Build React
              command: |
                cd TerraWeb && npm run build
          - run:
              name: Install AWS CLI
              command: |
                sudo apt-get -y -qq install awscli
          - run:
              name: Configure AWS CLI to Run as Admin
              command: |
                  aws configure set aws_access_key_id $adminAccessKey
                  aws configure set aws_secret_access_key $adminSecretAccessKey
                  aws configure set default.region us-east-1
          - run:
              name: Ship Build File To S3 Bucket
              command: |
                 cd TerraWeb && aws s3 mv ./build s3://${BucketName} --recursive --acl public-read-write

  deploy_ecs_api_containers:
      working_directory: ~/app
      docker:
          - image: openjdk:8
      environment:
          SBT_VERSION: 1.0.4
      steps:
          - checkout
          - run:
              name: Get sbt binary
              command: |
                apt update && apt install -y curl
                curl -L -o sbt-$SBT_VERSION.deb https://dl.bintray.com/sbt/debian/sbt-$SBT_VERSION.deb
                dpkg -i sbt-$SBT_VERSION.deb
                rm sbt-$SBT_VERSION.deb
                apt-get update
                apt-get install -y sbt python-pip git
                pip install awscli
                apt-get clean && apt-get autoclean
          - run:
              name: Checkout the Code
              command: |
                git clone https://github.com/sdrafahl/TerraAPI.git
          - run:
              name: Assemble The Jar
              command: |
                cd TerraAPI
                sbt assembly
          - run:
              name: Configure AWS CLI To Run As Admin Role
              command: |
                aws configure set aws_access_key_id $adminAccessKey
                aws configure set aws_secret_access_key $adminSecretAccessKey
                aws configure set default.region us-east-1
          - run:
              name: Ship Jar to S3 Bucket
              command: |
                cd TerraAPI
                aws s3 mv ./target/scala-2.12/hello.jar s3://${LambdaS3BucketName} --acl public-read-write
          - run:
              name: Deploy API stack
              command: aws cloudformation deploy --template-file cloudFormationLambda.yaml --capabilities CAPABILITY_IAM --stack-name APIStack --no-fail-on-empty-changeset --parameter-overrides LambdaS3BucketName=${LambdaS3BucketName}
              no_output_timeout: 30m
          - run:
              name: Create custom domain name if necessary
              command: ./createCustomDomainName.sh lawnnanny.com. www.lawnnanny.com lambddas.lawnnanny.com
              no_output_timeout: 30m
workflows:
    version: 2
    build_and_test:
        jobs:
            - deploy_aws_cloud_formation
            - deploy_react_to_cloud_front:
                requires:
                    - deploy_aws_cloud_formation
            - deploy_ecs_api_containers:
                requires:
                    - deploy_aws_cloud_formation
